" cltrp.vim
" jellybeans
" nerdtree
" nord-vim
" papercolor-theme
" syntastic
" vim-airline
" vim-colors-solarized
" vim-fugitive
" vim-monokai

syntax on

source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

colors jellybeans
set runtimepath^=$VIMRUNTIME\ctrlp.vim
set runtimepath^=$VIMRUNTIME\vim-airline
set runtimepath^=$VIMRUNTIME\vim-fugitive
set runtimepath^=$VIMRUNTIME\nerdtree
set runtimepath^=$VIMRUNTIME\togglebg
set runtimepath^=$VIMRUNTIME\syntastic
set nu

map <C-n> :NERDTreeToggle<CR>
nmap <C-m> :NERDTreeFind<CR>
set tags=tags;
set ic

syntax enable
set background=dark
colorscheme PaperColor
set background=light
set tabstop=4 softtabstop=0 expandtab shiftwidth=4 smarttab
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set list

let g:ctrlp_working_path_mode = 0




nnoremap <Space> i_<Esc>r


set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" let g:syntastic_debug = 1
let g:syntastic_enable_signs=1


noremap <c-s-up> :call feedkeys( line('.')==1 ? '' : 'ddkP' )<CR>
noremap <c-s-down> ddp


" Normal mode
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==

" Insert mode
inoremap <C-j> <ESC>:m .+1<CR>==gi
inoremap <C-k> <ESC>:m .-2<CR>==gi

" Visual mode
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv
